install.packages("sqldf")
library(sqldf)
install.packages("odbc")
library(odbc)
con <- dbConnect(odbc::odbc(),
Driver = "SQL Server",   # ou "SQL Server Native Client 11.0", dependendo da versão
Server = "NOTEBOOK",  # pode ser um IP ou nome do servidor
Database = "bd_Aula",  # nome do banco de dados
UID = "sa",      # seu nome de usuário do banco
PWD = "1234",        # sua senha
Port = 1433)              # geralmente a porta padrão para SQL Server
result <- dbGetQuery(con, "SELECT * FROM sua_tabela")
result <- dbGetQuery(con, "SELECT * FROM Aluno")
result <- dbGetQuery(con, "SELECT * FROM Aluno")
dbDisconnect(con)
dbDisconnect(con)
dbDisconnect(con)
dbDisconnect(con)
result <- dbGetQuery(con, "SELECT * FROM Aluno")
con <- dbConnect(odbc::odbc(),
Driver = "SQL Server",   # ou "SQL Server Native Client 11.0", dependendo da versão
Server = "NOTEBOOK",  # pode ser um IP ou nome do servidor
Database = "bd_Aula",  # nome do banco de dados
UID = "sa",      # seu nome de usuário do banco
PWD = "1234",        # sua senha
Port = 1433)
result <- dbGetQuery(con, "SELECT * FROM Aluno")
print(result)
print(result)
result <- dbGetQuery(con, "SELECT * FROM Aluno")
print(result)
cat(result)
dbDisconnect(con)
install.packages("DBI")
install.packages("odbc")
install.packages("ggplot2")
library(DBI)
library(odbc)
library(ggplot2)
con <- dbConnect(odbc::odbc(),
Driver = "SQL Server",   # ou "SQL Server Native Client 11.0", dependendo da versão
Server = "NOTEBOOK",  # pode ser um IP ou nome do servidor
Database = "bd_Aula",  # nome do banco de dados
UID = "sa",      # seu nome de usuário do banco
PWD = "1234",        # sua senha
Port = 1433)              # geralmente a porta padrão para SQL Server
dbListTables(con)  # Lista todas as tabelas disponíveis no banco
query <- "SELECT curso, COUNT(*) AS total_alunos FROM Aluno GROUP BY curso"
dados <- dbGetQuery(con, query)
ggplot(dados, aes(x = reorder(curso, -total_alunos), y = total_alunos, fill = curso)) +
geom_bar(stat = "identity") +
labs(title = "Quantidade de Alunos por Curso",
x = "Curso",
y = "Total de Alunos") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotaciona os nomes no eixo X
install.packages("ggplot2")
library(DBI)
library(odbc)
library(ggplot2)
ggplot(dados, aes(x = reorder(curso, -total_alunos), y = total_alunos, fill = curso)) +
geom_bar(stat = "identity") +
labs(title = "Quantidade de Alunos por Curso",
x = "Curso",
y = "Total de Alunos") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotaciona os nomes no eixo X
query <- "SELECT disciplina, AVG(nota) AS media_nota, COUNT(DISTINCT id_aluno) AS total_alunos FROM Media GROUP BY disciplina ORDER BY media_nota DESC;"
dados <- dbGetQuery(con, query)
ggplot(dados, aes(x = reorder(disciplina, -media_nota), y = media_nota, fill = disciplina)) +
geom_bar(stat = "identity") +
labs(title = "Média das Notas por Disciplina",
x = "Disciplina",
y = "Média das Notas") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Rotaciona os nomes no eixo X
ggplot(dados, aes(x = reorder(disciplina, -total_alunos), y = total_alunos, fill = disciplina)) +
geom_bar(stat = "identity") +
labs(title = "Número de Alunos por Disciplina",
x = "Disciplina",
y = "Total de Alunos") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
dbDisconnect(con)
library(DBI)
con <- dbConnect(odbc::odbc(), Driver = "SQL Server", Server = "NOTEBOOK",
Database = "bd_Aula", UID = "sa", PWD = "1234", Port = 1433)
dbDisconnect(con)
